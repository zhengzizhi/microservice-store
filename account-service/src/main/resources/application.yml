spring:
  profiles:
    active: development
---
spring:
  profiles: development
  datasource:
    url: jdbc:mysql://192.168.99.100:3306/dev?useSSL=false
    username: root
    password: dbpass
    schema-username: root
    schema-password: dbpass
    data-username: root
    data-password: dbpass
    platform: mysql
    schema: classpath:schema.sql
    data: classpath:data.sql
    continue-on-error: true
    initialization-mode: never
security:
  oauth2:
    resource:
      userInfoUri: http://192.168.99.100:8181/uaa/user
    client:
      client-id: acme
      access-token-uri: http://192.168.99.100:8787
eureka:
  instance:
    prefer-ip-address: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://192.168.99.100:8761/eureka/
---
spring:
  profiles: docker
  datasource:
    url: jdbc:mysql://mysql:3306/dev?useSSL=false
    username: root
    password: dbpass
    schema-username: root
    schema-password: dbpass
    data-username: root
    data-password: dbpass
    platform: mysql
    schema: classpath:schema.sql
    data: classpath:data.sql
    continue-on-error: true
    initialization-mode: always
security:
  oauth2:
    resource:
      userInfoUri: http://${DOCKER_IP:192.168.99.100}:8181/uaa/user
    client:
      client-id: acme
eureka:
  instance:
    prefer-ip-address: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://discovery-service:8761/eureka/
---
spring:
  application:
    name: account-service
  profiles: test
  jpa:
    show-sql: false
    database: H2
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_ON_EXIT=FALSE
    initialization-mode: never
security:
  oauth2:
    resource:
      userInfoUri: http://localhost:8181/uaa/user
    client:
      client-id: acme
      access-token-uri: http://localhost:8787
